{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/dist/compiler/shims/react.ts", "../app/entry.server.tsx", "../app/root.tsx", "../app/session.server.ts", "../app/models/user.server.ts", "../app/db.server.ts", "../app/routes/healthcheck.tsx", "../app/routes/logout.tsx", "../app/routes/index.tsx", "../app/utils.ts", "../app/routes/login.tsx", "../app/routes/notes.tsx", "../app/models/note.server.ts", "../app/routes/notes/$noteId.tsx", "../app/routes/notes/index.tsx", "../app/routes/notes/new.tsx", "../app/routes/join.tsx", "../app/routes/maps.tsx", "../app/components/stats-window.tsx", "../app/components/curved-polyline.tsx", "../app/layers/cycling.ts", "../app/layers/driving-traffic.ts", "../app/layers/public-transport.ts", "../app/layers/walking.ts", "../app/layers/LayerMap.ts", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import { PassThrough } from \"stream\";\nimport { renderToPipeableStream } from \"react-dom/server\";\nimport { RemixServer } from \"@remix-run/react\";\nimport { Response } from \"@remix-run/node\";\nimport type { EntryContext, Headers } from \"@remix-run/node\";\nimport isbot from \"isbot\";\n\nconst ABORT_DELAY = 5000;\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const callbackName = isbot(request.headers.get(\"user-agent\"))\n    ? \"onAllReady\"\n    : \"onShellReady\";\n\n  return new Promise((resolve, reject) => {\n    let didError = false;\n\n    const { pipe, abort } = renderToPipeableStream(\n      <RemixServer context={remixContext} url={request.url} />,\n      {\n        [callbackName]() {\n          let body = new PassThrough();\n\n          responseHeaders.set(\"Content-Type\", \"text/html\");\n\n          resolve(\n            new Response(body, {\n              status: didError ? 500 : responseStatusCode,\n              headers: responseHeaders,\n            })\n          );\n          pipe(body);\n        },\n        onShellError(err: unknown) {\n          reject(err);\n        },\n        onError(error: unknown) {\n          didError = true;\n          console.error(error);\n        },\n      }\n    );\n    setTimeout(abort, ABORT_DELAY);\n  });\n}\n", "import type { LinksFunction, LoaderArgs, MetaFunction } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n} from \"@remix-run/react\";\n\nimport tailwindStylesheetUrl from \"./styles/tailwind.css\";\nimport { getUser } from \"./session.server\";\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: tailwindStylesheetUrl },\n    { rel: \"preconnect\",  href: \"https://fonts.gstatic.com\", as: 'style'},\n    { rel: \"stylesheet\", href: \"https://fonts.googleapis.com/css2?family=Alata&display=swap\", as: 'font'},\n    { rel: \"stylesheet\", href: \"https://fonts.googleapis.com/css2?family=Maven+Pro:wght@500&display=swap\", as: 'font'}\n];\n};\n\nexport const meta: MetaFunction = () => ({\n  charset: \"utf-8\",\n  title: \"Remix Notes\",\n  viewport: \"width=device-width,initial-scale=1\",\n});\n\nexport async function loader({ request }: LoaderArgs) {\n  return json({\n    user: await getUser(request),\n  });\n}\n\nexport default function App() {\n  return (\n    <html lang=\"en\" className=\"h-full\">\n      <head>\n        <Meta />\n        <Links />\n      </head>\n      <body className=\"h-full\">\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  );\n}\n", "import { createCookieSessionStorage, redirect } from \"@remix-run/node\";\nimport invariant from \"tiny-invariant\";\n\nimport type { User } from \"~/models/user.server\";\nimport { getUserById } from \"~/models/user.server\";\n\ninvariant(process.env.SESSION_SECRET, \"SESSION_SECRET must be set\");\n\nexport const sessionStorage = createCookieSessionStorage({\n  cookie: {\n    name: \"__session\",\n    httpOnly: true,\n    path: \"/\",\n    sameSite: \"lax\",\n    secrets: [process.env.SESSION_SECRET],\n    secure: process.env.NODE_ENV === \"production\",\n  },\n});\n\nconst USER_SESSION_KEY = \"userId\";\n\nexport async function getSession(request: Request) {\n  const cookie = request.headers.get(\"Cookie\");\n  return sessionStorage.getSession(cookie);\n}\n\nexport async function getUserId(\n  request: Request\n): Promise<User[\"id\"] | undefined> {\n  const session = await getSession(request);\n  const userId = session.get(USER_SESSION_KEY);\n  return userId;\n}\n\nexport async function getUser(request: Request) {\n  const userId = await getUserId(request);\n  if (userId === undefined) return null;\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function requireUserId(\n  request: Request,\n  redirectTo: string = new URL(request.url).pathname\n) {\n  const userId = await getUserId(request);\n  if (!userId) {\n    const searchParams = new URLSearchParams([[\"redirectTo\", redirectTo]]);\n    throw redirect(`/login?${searchParams}`);\n  }\n  return userId;\n}\n\nexport async function requireUser(request: Request) {\n  const userId = await requireUserId(request);\n\n  const user = await getUserById(userId);\n  if (user) return user;\n\n  throw await logout(request);\n}\n\nexport async function createUserSession({\n  request,\n  userId,\n  remember,\n  redirectTo,\n}: {\n  request: Request;\n  userId: string;\n  remember: boolean;\n  redirectTo: string;\n}) {\n  const session = await getSession(request);\n  session.set(USER_SESSION_KEY, userId);\n  return redirect(redirectTo, {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.commitSession(session, {\n        maxAge: remember\n          ? 60 * 60 * 24 * 7 // 7 days\n          : undefined,\n      }),\n    },\n  });\n}\n\nexport async function logout(request: Request) {\n  const session = await getSession(request);\n  return redirect(\"/\", {\n    headers: {\n      \"Set-Cookie\": await sessionStorage.destroySession(session),\n    },\n  });\n}\n", "import type { Password, User } from \"@prisma/client\";\nimport bcrypt from \"bcryptjs\";\n\nimport { prisma } from \"~/db.server\";\n\nexport type { User } from \"@prisma/client\";\n\nexport async function getUserById(id: User[\"id\"]) {\n  return prisma.user.findUnique({ where: { id } });\n}\n\nexport async function getUserByEmail(email: User[\"email\"]) {\n  return prisma.user.findUnique({ where: { email } });\n}\n\nexport async function createUser(email: User[\"email\"], password: string) {\n  const hashedPassword = await bcrypt.hash(password, 10);\n\n  return prisma.user.create({\n    data: {\n      email,\n      password: {\n        create: {\n          hash: hashedPassword,\n        },\n      },\n    },\n  });\n}\n\nexport async function deleteUserByEmail(email: User[\"email\"]) {\n  return prisma.user.delete({ where: { email } });\n}\n\nexport async function verifyLogin(\n  email: User[\"email\"],\n  password: Password[\"hash\"]\n) {\n  const userWithPassword = await prisma.user.findUnique({\n    where: { email },\n    include: {\n      password: true,\n    },\n  });\n\n  if (!userWithPassword || !userWithPassword.password) {\n    return null;\n  }\n\n  const isValid = await bcrypt.compare(\n    password,\n    userWithPassword.password.hash\n  );\n\n  if (!isValid) {\n    return null;\n  }\n\n  const { password: _password, ...userWithoutPassword } = userWithPassword;\n\n  return userWithoutPassword;\n}\n", "import { PrismaClient } from \"@prisma/client\";\n\nlet prisma: PrismaClient;\n\ndeclare global {\n  var __db__: PrismaClient;\n}\n\n// this is needed because in development we don't want to restart\n// the server with every change, but we want to make sure we don't\n// create a new connection to the DB with every change either.\n// in production we'll have a single connection to the DB.\nif (process.env.NODE_ENV === \"production\") {\n  prisma = new PrismaClient();\n} else {\n  if (!global.__db__) {\n    global.__db__ = new PrismaClient();\n  }\n  prisma = global.__db__;\n  prisma.$connect();\n}\n\nexport { prisma };\n", "// learn more: https://fly.io/docs/reference/configuration/#services-http_checks\nimport type { LoaderArgs } from \"@remix-run/node\";\n\nimport { prisma } from \"~/db.server\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const host =\n    request.headers.get(\"X-Forwarded-Host\") ?? request.headers.get(\"host\");\n\n  try {\n    const url = new URL(\"/\", `http://${host}`);\n    // if we can connect to the database and make a simple query\n    // and make a HEAD request to ourselves, then we're good.\n    await Promise.all([\n      prisma.user.count(),\n      fetch(url.toString(), { method: \"HEAD\" }).then((r) => {\n        if (!r.ok) return Promise.reject(r);\n      }),\n    ]);\n    return new Response(\"OK\");\n  } catch (error: unknown) {\n    console.log(\"healthcheck \u274C\", { error });\n    return new Response(\"ERROR\", { status: 500 });\n  }\n}\n", "import type { ActionArgs } from \"@remix-run/node\";\nimport { redirect } from \"@remix-run/node\";\n\nimport { logout } from \"~/session.server\";\n\nexport async function action({ request }: ActionArgs) {\n  return logout(request);\n}\n\nexport async function loader() {\n  return redirect(\"/\");\n}\n", "import { Link } from \"@remix-run/react\";\r\n\r\nimport { useOptionalUser } from \"~/utils\";\r\n\r\nexport default function Index() {\r\n  const user = useOptionalUser();\r\n  \r\n  const mainPageTransition = () => {\r\n    return (<Link to='maps'>test</Link>)\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-gray-50 flex h-screen justify-center items-center\">\r\n      <img src=\"/images/winter-train.jpg\" alt=\"\" className=\"w-full h-full object-cover blur-md bg-black/30\"></img> \r\n      <div className=\"max-w-7xl mx-auto py-6 px-4 sm:px-6 lg:py-16 lg:px-8 lg:flex lg:items-center lg:justify-between absolute rounded-3xl shadow-lg bg-blue-100\">\r\n        <div>\r\n          <div className=\" text-4xl font-bold tracking-tight text-gray-900 sm:text-4xl\"> \r\n            <span className=\"block text-gray-700\">Welcome to </span>\r\n            <span className=\"text-green-500\">green</span><span className=\"text-violet-500\">Transit</span>\r\n          </div>\r\n          <div className=\"text-3xl  block font-light lg:py-2 text-gray-500\">\r\n            Start your <span className=\"text-green-500\"> green journey</span> today.\r\n          </div>\r\n        </div>\r\n        <div className=\"mt-8 flex lg:mt-0 ml-12 lg:flex-shrink-0\">\r\n          <div className=\"inline-flex rounded-md shadow\">\r\n            <a href=\"maps\" className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-green-600 hover:bg-green-700 transform transition-all hover:scale-105\"> Let's Go! </a>\r\n          </div>\r\n          <div className=\"ml-3 inline-flex rounded-md shadow\">\r\n            <a href=\"#\" className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-indigo-600 bg-white hover:bg-indigo-50 transform transition-all hover:scale-105\"> Learn more </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n", "import { useMatches } from \"@remix-run/react\";\nimport { useMemo } from \"react\";\n\nimport type { User } from \"~/models/user.server\";\n\nconst DEFAULT_REDIRECT = \"/\";\n\n/**\n * This should be used any time the redirect path is user-provided\n * (Like the query string on our login/signup pages). This avoids\n * open-redirect vulnerabilities.\n * @param {string} to The redirect destination\n * @param {string} defaultRedirect The redirect to use if the to is unsafe.\n */\nexport function safeRedirect(\n  to: FormDataEntryValue | string | null | undefined,\n  defaultRedirect: string = DEFAULT_REDIRECT\n) {\n  if (!to || typeof to !== \"string\") {\n    return defaultRedirect;\n  }\n\n  if (!to.startsWith(\"/\") || to.startsWith(\"//\")) {\n    return defaultRedirect;\n  }\n\n  return to;\n}\n\n/**\n * This base hook is used in other hooks to quickly search for specific data\n * across all loader data using useMatches.\n * @param {string} id The route id\n * @returns {JSON|undefined} The router data or undefined if not found\n */\nexport function useMatchesData(\n  id: string\n): Record<string, unknown> | undefined {\n  const matchingRoutes = useMatches();\n  const route = useMemo(\n    () => matchingRoutes.find((route) => route.id === id),\n    [matchingRoutes, id]\n  );\n  return route?.data;\n}\n\nfunction isUser(user: any): user is User {\n  return user && typeof user === \"object\" && typeof user.email === \"string\";\n}\n\nexport function useOptionalUser(): User | undefined {\n  const data = useMatchesData(\"root\");\n  if (!data || !isUser(data.user)) {\n    return undefined;\n  }\n  return data.user;\n}\n\nexport function useUser(): User {\n  const maybeUser = useOptionalUser();\n  if (!maybeUser) {\n    throw new Error(\n      \"No user found in root loader, but user is required by useUser. If user is optional, try useOptionalUser instead.\"\n    );\n  }\n  return maybeUser;\n}\n\nexport function validateEmail(email: unknown): email is string {\n  return typeof email === \"string\" && email.length > 3 && email.includes(\"@\");\n}\n", "import type { ActionArgs, LoaderArgs, MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createUserSession, getUserId } from \"~/session.server\";\nimport { verifyLogin } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n}\n\nexport async function action({ request }: ActionArgs) {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/notes\");\n  const remember = formData.get(\"remember\");\n\n  if (!validateEmail(email)) {\n    return json(\n      { errors: { email: \"Email is invalid\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json(\n      { errors: { email: null, password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json(\n      { errors: { email: null, password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const user = await verifyLogin(email, password);\n\n  if (!user) {\n    return json(\n      { errors: { email: \"Invalid email or password\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: remember === \"on\" ? true : false,\n    redirectTo,\n  });\n}\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Login\",\n  };\n};\n\nexport default function LoginPage() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") || \"/notes\";\n  const actionData = useActionData<typeof action>();\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\">\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Log in\n          </button>\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center\">\n              <input\n                id=\"remember\"\n                name=\"remember\"\n                type=\"checkbox\"\n                className=\"h-4 w-4 rounded border-gray-300 text-blue-600 focus:ring-blue-500\"\n              />\n              <label\n                htmlFor=\"remember\"\n                className=\"ml-2 block text-sm text-gray-900\"\n              >\n                Remember me\n              </label>\n            </div>\n            <div className=\"text-center text-sm text-gray-500\">\n              Don't have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/join\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Sign up\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import type { LoaderArgs } from \"@remix-run/node\";\nimport { json } from \"@remix-run/node\";\nimport { Form, Link, NavLink, Outlet, useLoaderData } from \"@remix-run/react\";\n\nimport { requireUserId } from \"~/session.server\";\nimport { useUser } from \"~/utils\";\nimport { getNoteListItems } from \"~/models/note.server\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const userId = await requireUserId(request);\n  const noteListItems = await getNoteListItems({ userId });\n  return json({ noteListItems });\n}\n\nexport default function NotesPage() {\n  const data = useLoaderData<typeof loader>();\n  const user = useUser();\n\n  return (\n    <div className=\"flex h-full min-h-screen flex-col\">\n      <header className=\"flex items-center justify-between bg-slate-800 p-4 text-white\">\n        <h1 className=\"text-3xl font-bold\">\n          <Link to=\".\">Notes</Link>\n        </h1>\n        <p>{user.email}</p>\n        <Form action=\"/logout\" method=\"post\">\n          <button\n            type=\"submit\"\n            className=\"rounded bg-slate-600 py-2 px-4 text-blue-100 hover:bg-blue-500 active:bg-blue-600\"\n          >\n            Logout\n          </button>\n        </Form>\n      </header>\n\n      <main className=\"flex h-full bg-white\">\n        <div className=\"h-full w-80 border-r bg-gray-50\">\n          <Link to=\"new\" className=\"block p-4 text-xl text-blue-500\">\n            + New Note\n          </Link>\n\n          <hr />\n\n          {data.noteListItems.length === 0 ? (\n            <p className=\"p-4\">No notes yet</p>\n          ) : (\n            <ol>\n              {data.noteListItems.map((note) => (\n                <li key={note.id}>\n                  <NavLink\n                    className={({ isActive }) =>\n                      `block border-b p-4 text-xl ${isActive ? \"bg-white\" : \"\"}`\n                    }\n                    to={note.id}\n                  >\n                    \uD83D\uDCDD {note.title}\n                  </NavLink>\n                </li>\n              ))}\n            </ol>\n          )}\n        </div>\n\n        <div className=\"flex-1 p-6\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n}\n", "import type { User, Note } from \"@prisma/client\";\n\nimport { prisma } from \"~/db.server\";\n\nexport type { Note } from \"@prisma/client\";\n\nexport function getNote({\n  id,\n  userId,\n}: Pick<Note, \"id\"> & {\n  userId: User[\"id\"];\n}) {\n  return prisma.note.findFirst({\n    select: { id: true, body: true, title: true },\n    where: { id, userId },\n  });\n}\n\nexport function getNoteListItems({ userId }: { userId: User[\"id\"] }) {\n  return prisma.note.findMany({\n    where: { userId },\n    select: { id: true, title: true },\n    orderBy: { updatedAt: \"desc\" },\n  });\n}\n\nexport function createNote({\n  body,\n  title,\n  userId,\n}: Pick<Note, \"body\" | \"title\"> & {\n  userId: User[\"id\"];\n}) {\n  return prisma.note.create({\n    data: {\n      title,\n      body,\n      user: {\n        connect: {\n          id: userId,\n        },\n      },\n    },\n  });\n}\n\nexport function deleteNote({\n  id,\n  userId,\n}: Pick<Note, \"id\"> & { userId: User[\"id\"] }) {\n  return prisma.note.deleteMany({\n    where: { id, userId },\n  });\n}\n", "import type { ActionArgs, LoaderArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useCatch, useLoaderData } from \"@remix-run/react\";\nimport invariant from \"tiny-invariant\";\n\nimport { deleteNote } from \"~/models/note.server\";\nimport { getNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\nexport async function loader({ request, params }: LoaderArgs) {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  const note = await getNote({ userId, id: params.noteId });\n  if (!note) {\n    throw new Response(\"Not Found\", { status: 404 });\n  }\n  return json({ note });\n}\n\nexport async function action({ request, params }: ActionArgs) {\n  const userId = await requireUserId(request);\n  invariant(params.noteId, \"noteId not found\");\n\n  await deleteNote({ userId, id: params.noteId });\n\n  return redirect(\"/notes\");\n}\n\nexport default function NoteDetailsPage() {\n  const data = useLoaderData<typeof loader>();\n\n  return (\n    <div>\n      <h3 className=\"text-2xl font-bold\">{data.note.title}</h3>\n      <p className=\"py-6\">{data.note.body}</p>\n      <hr className=\"my-4\" />\n      <Form method=\"post\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Delete\n        </button>\n      </Form>\n    </div>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n\n  return <div>An unexpected error occurred: {error.message}</div>;\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  if (caught.status === 404) {\n    return <div>Note not found</div>;\n  }\n\n  throw new Error(`Unexpected caught response with status: ${caught.status}`);\n}\n", "import { Link } from \"@remix-run/react\";\n\nexport default function NoteIndexPage() {\n  return (\n    <p>\n      No note selected. Select a note on the left, or{\" \"}\n      <Link to=\"new\" className=\"text-blue-500 underline\">\n        create a new note.\n      </Link>\n    </p>\n  );\n}\n", "import type { ActionArgs } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { createNote } from \"~/models/note.server\";\nimport { requireUserId } from \"~/session.server\";\n\nexport async function action({ request }: ActionArgs) {\n  const userId = await requireUserId(request);\n\n  const formData = await request.formData();\n  const title = formData.get(\"title\");\n  const body = formData.get(\"body\");\n\n  if (typeof title !== \"string\" || title.length === 0) {\n    return json(\n      { errors: { title: \"Title is required\", body: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof body !== \"string\" || body.length === 0) {\n    return json(\n      { errors: { title: null, body: \"Body is required\" } },\n      { status: 400 }\n    );\n  }\n\n  const note = await createNote({ title, body, userId });\n\n  return redirect(`/notes/${note.id}`);\n}\n\nexport default function NewNotePage() {\n  const actionData = useActionData<typeof action>();\n  const titleRef = React.useRef<HTMLInputElement>(null);\n  const bodyRef = React.useRef<HTMLTextAreaElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.title) {\n      titleRef.current?.focus();\n    } else if (actionData?.errors?.body) {\n      bodyRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <Form\n      method=\"post\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: 8,\n        width: \"100%\",\n      }}\n    >\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Title: </span>\n          <input\n            ref={titleRef}\n            name=\"title\"\n            className=\"flex-1 rounded-md border-2 border-blue-500 px-3 text-lg leading-loose\"\n            aria-invalid={actionData?.errors?.title ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.title ? \"title-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.title && (\n          <div className=\"pt-1 text-red-700\" id=\"title-error\">\n            {actionData.errors.title}\n          </div>\n        )}\n      </div>\n\n      <div>\n        <label className=\"flex w-full flex-col gap-1\">\n          <span>Body: </span>\n          <textarea\n            ref={bodyRef}\n            name=\"body\"\n            rows={8}\n            className=\"w-full flex-1 rounded-md border-2 border-blue-500 py-2 px-3 text-lg leading-6\"\n            aria-invalid={actionData?.errors?.body ? true : undefined}\n            aria-errormessage={\n              actionData?.errors?.body ? \"body-error\" : undefined\n            }\n          />\n        </label>\n        {actionData?.errors?.body && (\n          <div className=\"pt-1 text-red-700\" id=\"body-error\">\n            {actionData.errors.body}\n          </div>\n        )}\n      </div>\n\n      <div className=\"text-right\">\n        <button\n          type=\"submit\"\n          className=\"rounded bg-blue-500 py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n        >\n          Save\n        </button>\n      </div>\n    </Form>\n  );\n}\n", "import type { ActionArgs, LoaderArgs, MetaFunction } from \"@remix-run/node\";\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, Link, useActionData, useSearchParams } from \"@remix-run/react\";\nimport * as React from \"react\";\n\nimport { getUserId, createUserSession } from \"~/session.server\";\n\nimport { createUser, getUserByEmail } from \"~/models/user.server\";\nimport { safeRedirect, validateEmail } from \"~/utils\";\n\nexport async function loader({ request }: LoaderArgs) {\n  const userId = await getUserId(request);\n  if (userId) return redirect(\"/\");\n  return json({});\n}\n\nexport async function action({ request }: ActionArgs) {\n  const formData = await request.formData();\n  const email = formData.get(\"email\");\n  const password = formData.get(\"password\");\n  const redirectTo = safeRedirect(formData.get(\"redirectTo\"), \"/\");\n\n  if (!validateEmail(email)) {\n    return json(\n      { errors: { email: \"Email is invalid\", password: null } },\n      { status: 400 }\n    );\n  }\n\n  if (typeof password !== \"string\" || password.length === 0) {\n    return json(\n      { errors: { email: null, password: \"Password is required\" } },\n      { status: 400 }\n    );\n  }\n\n  if (password.length < 8) {\n    return json(\n      { errors: { email: null, password: \"Password is too short\" } },\n      { status: 400 }\n    );\n  }\n\n  const existingUser = await getUserByEmail(email);\n  if (existingUser) {\n    return json(\n      {\n        errors: {\n          email: \"A user already exists with this email\",\n          password: null,\n        },\n      },\n      { status: 400 }\n    );\n  }\n\n  const user = await createUser(email, password);\n\n  return createUserSession({\n    request,\n    userId: user.id,\n    remember: false,\n    redirectTo,\n  });\n}\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Sign Up\",\n  };\n};\n\nexport default function Join() {\n  const [searchParams] = useSearchParams();\n  const redirectTo = searchParams.get(\"redirectTo\") ?? undefined;\n  const actionData = useActionData<typeof action>();\n  const emailRef = React.useRef<HTMLInputElement>(null);\n  const passwordRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (actionData?.errors?.email) {\n      emailRef.current?.focus();\n    } else if (actionData?.errors?.password) {\n      passwordRef.current?.focus();\n    }\n  }, [actionData]);\n\n  return (\n    <div className=\"flex min-h-full flex-col justify-center\">\n      <div className=\"mx-auto w-full max-w-md px-8\">\n        <Form method=\"post\" className=\"space-y-6\">\n          <div>\n            <label\n              htmlFor=\"email\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Email address\n            </label>\n            <div className=\"mt-1\">\n              <input\n                ref={emailRef}\n                id=\"email\"\n                required\n                autoFocus={true}\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                aria-invalid={actionData?.errors?.email ? true : undefined}\n                aria-describedby=\"email-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.email && (\n                <div className=\"pt-1 text-red-700\" id=\"email-error\">\n                  {actionData.errors.email}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <div>\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium text-gray-700\"\n            >\n              Password\n            </label>\n            <div className=\"mt-1\">\n              <input\n                id=\"password\"\n                ref={passwordRef}\n                name=\"password\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                aria-invalid={actionData?.errors?.password ? true : undefined}\n                aria-describedby=\"password-error\"\n                className=\"w-full rounded border border-gray-500 px-2 py-1 text-lg\"\n              />\n              {actionData?.errors?.password && (\n                <div className=\"pt-1 text-red-700\" id=\"password-error\">\n                  {actionData.errors.password}\n                </div>\n              )}\n            </div>\n          </div>\n\n          <input type=\"hidden\" name=\"redirectTo\" value={redirectTo} />\n          <button\n            type=\"submit\"\n            className=\"w-full rounded bg-blue-500  py-2 px-4 text-white hover:bg-blue-600 focus:bg-blue-400\"\n          >\n            Create Account\n          </button>\n          <div className=\"flex items-center justify-center\">\n            <div className=\"text-center text-sm text-gray-500\">\n              Already have an account?{\" \"}\n              <Link\n                className=\"text-blue-500 underline\"\n                to={{\n                  pathname: \"/login\",\n                  search: searchParams.toString(),\n                }}\n              >\n                Log in\n              </Link>\n            </div>\n          </div>\n        </Form>\n      </div>\n    </div>\n  );\n}\n", "import { Switch, Transition } from \"@headlessui/react\";\r\nimport Map, { Layer, MapRef, Source } from 'react-map-gl';\r\nimport { LinksFunction, LoaderArgs } from \"@remix-run/node\";\r\nimport { Form, useLoaderData } from \"@remix-run/react\";\r\nimport { Fragment, MutableRefObject, useEffect, useRef, useState } from \"react\";\r\nimport { toGeoJSON } from '@mapbox/polyline';\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport { StatsData } from \"~/types/StatsData\";\r\nimport { NameValue } from \"~/types/NameValue\";\r\nimport StatsWindow from \"~/components/stats-window\";\r\nimport { TransitTypes } from \"~/types/TransitTypes\";\r\nimport { useLoadScript } from \"@react-google-maps/api\";\r\nimport CurvedPolyline from \"~/components/curved-polyline\";\r\nimport { layerMap } from \"~/layers/LayerMap\";\r\n\r\nexport async function loader({ request }: LoaderArgs) {\r\n    return [process.env.MAPBOX_API_KEY, process.env.MAPS_API_KEY];\r\n}\r\n\r\nexport const links: LinksFunction = () => {\r\n    return [{rel: 'stylesheet', href: 'https://api.tiles.mapbox.com/mapbox-gl-js/v0.53.0/mapbox-gl.css', as:\"fetch\"}];\r\n};\r\n\r\n\r\ntype Libraries = (\"drawing\" | \"geometry\" | \"localContext\" | \"places\" | \"visualization\")[];\r\nexport const libraries:Libraries = ['places']\r\n\r\ntype Routes = {\r\n    [index: string]: GeoJSON.Feature,\r\n}\r\n\r\ntype CarbonMultipliers = {\r\n    'driving-traffic': number,\r\n    'cycling': number,\r\n    'walking': number,\r\n    'public-transport': number,\r\n    'bus': number,\r\n    'train': number,\r\n}\r\n\r\n/**\r\n * The main map function with overlays.\r\n * TODO: All routes using different transportation options will be calculated and toggled when the user chooses them.\r\n * TODO: Make the url metadata change when a route is calculated so that the user can share/revisit the output\r\n * @returns the map and overlays\r\n */\r\nexport default function Maps() {\r\n    let [isShowingTopMenu, setIsShowingTopMenu] = useState(true);\r\n\r\n    const apiKey = useLoaderData();\r\n\r\n    const MapboxGeocoderSDK = require('@mapbox/mapbox-sdk/services/geocoding')\r\n    const MapboxDirectionsModule = require('@mapbox/mapbox-sdk/services/directions');\r\n    const directionService = new MapboxDirectionsModule({\r\n        accessToken: apiKey[0],\r\n        unit: 'metric',\r\n        alternatives: false,\r\n        geometries: 'geojson',\r\n        controls: { instructions: false },\r\n        flyTo: true,\r\n    });\r\n    const geocodingClient = new MapboxGeocoderSDK({\r\n        accessToken: apiKey[0],\r\n    });\r\n\r\n    const travelTypes: TransitTypes[] = ['driving-traffic', 'walking', 'cycling'];\r\n    const carbonMultipliers: CarbonMultipliers = {\r\n        'driving-traffic': 271, // whole car (to check again)\r\n        'cycling': 5, // manufacturing emissions\r\n        'walking': 0.0005, // manufacturing shoes + disposal 0.3kgCO2, 600km lifespan\r\n        'public-transport': 118, // Fall back if unidentified \r\n        'bus': 73, // per pax https://www.eco-business.com/news/singapores-mrt-lines-be-graded-green-ness/\r\n        'train': 13.2,\r\n    }\r\n    const lowerLat = 1.2;\r\n    const upperLat = 1.48;\r\n    const lowerLng = 103.59;\r\n    const upperLng = 104.05;\r\n\r\n    const mapboxMapRef = useRef<MapRef>(null);\r\n    const [mapboxMap, setMapboxMap] = useState<mapboxgl.Map>();\r\n\r\n    const startMarker = useRef<mapboxgl.Marker>();\r\n    const endMarker = useRef<mapboxgl.Marker>();\r\n    const [markerSelector, setMarkerSelector] = useState<string>('');\r\n\r\n    // Set up map and marker after map is fully loaded\r\n    useEffect(() => {\r\n        if (mapboxMapRef != undefined && mapboxMapRef.current != null) {\r\n            setMapboxMap(mapboxMapRef.current.getMap());\r\n\r\n            startMarker.current = new mapboxgl.Marker({color: \"#20ba44\"});\r\n            endMarker.current = new mapboxgl.Marker({color: \"#972FFE\"});\r\n        }\r\n    }, [mapboxMapRef.current?.loaded]);\r\n\r\n    const startRef = useRef<HTMLInputElement>(null);\r\n    const endRef = useRef<HTMLInputElement>(null);\r\n\r\n    const [startLngLat, setStartLngLat] = useState<mapboxgl.LngLat>();\r\n    const [endLngLat, setEndLngLat] = useState<mapboxgl.LngLat>();\r\n\r\n    const noFeature: GeoJSON.Feature = {\r\n        type: \"Feature\",\r\n        geometry: {\r\n            type: 'LineString',\r\n            coordinates: [],\r\n        },\r\n        properties: null\r\n    }\r\n\r\n    const [activeTravelType, setActiveTravelType] = useState<string>('driving-traffic');\r\n    const [availableRoutes, setAvailableRoutes] = useState<Routes>({\r\n        'driving-traffic': noFeature,\r\n        'cycling': noFeature,\r\n        'walking': noFeature,\r\n        'public-transport': noFeature,\r\n    });\r\n    \r\n    const [activeRoute, setActiveRoute] = useState<GeoJSON.Feature>();\r\n    const [inactiveRoutes , setInactiveRoutes] = useState<Routes>(availableRoutes);\r\n    const [routesDistances, setRoutesDistances] = useState<NameValue>({\r\n        'driving-traffic': 0,\r\n        'cycling': 0,\r\n        'walking': 0,\r\n        'public-transport': 0,\r\n    });\r\n    const [routesDuration, setRoutesDuration] = useState<NameValue>({\r\n        'driving-traffic': 0,\r\n        'cycling': 0,\r\n        'walking': 0,\r\n        'public-transport': 0,\r\n    });\r\n    const [routesCarbon, setRoutesCarbon] = useState<NameValue>({\r\n        'driving-traffic': 0,\r\n        'cycling': 0,\r\n        'walking': 0,\r\n        'public-transport': 0,\r\n    });\r\n\r\n    \r\n    const [sidebarData, setSidebarData] = useState<StatsData[]>([\r\n        {\r\n            id: 1,\r\n            title: 'Driving',\r\n            type: 'driving-traffic',\r\n            distanceMeters: 0,\r\n            durationSeconds: 0,\r\n            carbonGrams: 0,\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Cycling',\r\n            type: 'cycling',\r\n            distanceMeters: 0,\r\n            durationSeconds: 0,\r\n            carbonGrams: 0,\r\n        },\r\n        {\r\n            id: 3,\r\n            title: 'Walking',\r\n            type: 'walking',\r\n            distanceMeters: 0,\r\n            durationSeconds: 0,\r\n            carbonGrams: 0,\r\n        },\r\n        {\r\n            id: 4,\r\n            title: 'Public Transit',\r\n            type: 'public-transport',\r\n            distanceMeters: 0,\r\n            durationSeconds: 0,\r\n            carbonGrams: 0,\r\n        }\r\n    ]);\r\n\r\n    useEffect(() => {\r\n        setSidebarData((prevState: StatsData[]): StatsData[] => { \r\n            const update: StatsData[] = [\r\n                ...prevState,\r\n            ];\r\n\r\n            const sortedDistance = Object.keys(routesDistances).sort((a, b) => {\r\n                return routesDistances[a] - routesDistances[b];\r\n            });\r\n\r\n            const sortedDuration = Object.keys(routesDuration).sort((a, b) => {\r\n                return routesDuration[a] - routesDuration[b];\r\n            });\r\n\r\n            const sortedCarbon = Object.keys(routesCarbon).sort((a, b) => {\r\n                return routesCarbon[a] - routesCarbon[b];\r\n            });\r\n\r\n            update.map((value) => {\r\n                value.distanceMeters = routesDistances[value.type];\r\n                value.durationSeconds = routesDuration[value.type];\r\n                value.carbonGrams = routesCarbon[value.type];\r\n                value.distanceRank = sortedDistance.indexOf(value.type);\r\n                value.durationRank = sortedDuration.indexOf(value.type);\r\n                value.carbonRank = sortedCarbon.indexOf(value.type);\r\n            })\r\n            return update;\r\n        })\r\n    }, [routesDistances, routesDuration]);\r\n\r\n    // Set the feature to be displayed in color\r\n    useEffect(() => {\r\n        let features: Routes = {};\r\n        travelTypes.forEach(travelType => {\r\n            if (travelType !== activeTravelType) {\r\n                features[travelType] = availableRoutes[travelType];\r\n            }\r\n        });\r\n\r\n        setInactiveRoutes(features);\r\n\r\n\r\n        if (activeTravelType !== undefined) {\r\n            setActiveRoute(availableRoutes[activeTravelType]);\r\n        }\r\n    }, [activeTravelType, availableRoutes]);\r\n\r\n    const { isLoaded } = useLoadScript({\r\n        googleMapsApiKey: apiKey[1],\r\n        libraries: libraries,\r\n    });\r\n\r\n    if (!isLoaded ) {\r\n        return <div/>;\r\n    }\r\n\r\n    const transitService = new google.maps.DirectionsService();\r\n\r\n    const calculateRoute = async () => {\r\n        if (startRef.current === null || startRef.current.value === '' || endRef.current === null || endRef.current.value === '' || startLngLat == null || endLngLat == null) {\r\n            return;\r\n        }\r\n\r\n        const newRoutes: Routes = {};\r\n        const newDistances: NameValue = {};\r\n        const newDuration: NameValue = {};\r\n        const newCarbon: NameValue = {};\r\n\r\n        await Promise.all(travelTypes.map((travelType: TransitTypes) => \r\n            directionService.getDirections({\r\n                profile: travelType,\r\n                waypoints: [\r\n                {\r\n                    coordinates: [startLngLat.lng, startLngLat.lat],\r\n                },\r\n                {\r\n                    coordinates: [endLngLat.lng, endLngLat.lat],\r\n                }\r\n                ],\r\n                overview: \"full\",\r\n                exclude: \"ferry\"\r\n            })\r\n            .send()\r\n            .then((response: any) => {\r\n                const geometry = toGeoJSON(response.body.routes[0].geometry);\r\n                \r\n                newRoutes[travelType] = {    \r\n                    type: \"Feature\",\r\n                    geometry: geometry,\r\n                    properties: null\r\n                };\r\n                newDistances[travelType] = response.body.routes[0].distance;\r\n                newDuration[travelType] = response.body.routes[0].duration;\r\n                newCarbon[travelType] = (response.body.routes[0].distance  / 1000) * carbonMultipliers[travelType]; // TODO: refine the carbon calculation\r\n            }).catch(() => {\r\n                newRoutes[travelType] = noFeature;\r\n\r\n                newDistances[travelType] = 0;\r\n                newDuration[travelType] = 0;\r\n                newCarbon[travelType] = 0;\r\n            }))\r\n        );\r\n\r\n        await transitService.route({\r\n            origin: startLngLat.lat + ', ' + startLngLat.lng,\r\n            destination: endLngLat.lat + ', ' + endLngLat.lng,\r\n            travelMode: google.maps.TravelMode.TRANSIT,\r\n            avoidFerries: true\r\n        }).then((response: any) => {\r\n            console.log(response.routes[0])\r\n\r\n            // Separate train, bus and walking distances for CO2 calc\r\n            let trainDist = 0;\r\n            let busDist = 0;\r\n            let walkDist = 0;\r\n            let miscDist = 0;\r\n\r\n            response.routes[0].legs[0].steps.map((step: any) => {\r\n                if (step.travel_mode === \"WALKING\") {\r\n                    walkDist += step.distance.value;\r\n                } else if (step.travel_mode === \"TRANSIT\" && step.transit.line.vehicle.type === \"SUBWAY\") {\r\n                    trainDist += step.distance.value;\r\n                } else if (step.travel_mode === \"TRANSIT\" && step.transit.line.vehicle.type === \"BUS\") {\r\n                    busDist += step.distance.value;\r\n                } else {\r\n                    miscDist += step.distance.value;\r\n                }\r\n            })\r\n            newRoutes['public-transport'] = CurvedPolyline(startLngLat, endLngLat);\r\n\r\n            const totalCarbon = walkDist * carbonMultipliers['walking'] + trainDist * carbonMultipliers['train'] + busDist * carbonMultipliers['bus'] + miscDist * carbonMultipliers['public-transport'];\r\n            \r\n            newDistances['public-transport'] = response.routes[0].legs[0].distance.value;\r\n            newDuration['public-transport'] = response.routes[0].legs[0].duration.value;\r\n            newCarbon['public-transport'] = (totalCarbon  / 1000); // Divide by 1000 because distance used was meters but multiplier is per km. \r\n        }).catch(() => {\r\n            newRoutes['public-transport'] = noFeature;\r\n\r\n            newDistances['public-transport'] = 0;\r\n            newDuration['public-transport'] = 0;\r\n            newCarbon['public-transport'] = 0;\r\n        });\r\n\r\n\r\n        console.log(newRoutes);\r\n        setAvailableRoutes(newRoutes);\r\n        setRoutesDistances(newDistances);\r\n        setRoutesDuration(newDuration);\r\n        setRoutesCarbon(newCarbon);\r\n    }\r\n\r\n    const placeMarker = (latLng: mapboxgl.LngLat | null, marker: MutableRefObject<mapboxgl.Marker | undefined>) => {\r\n        if (marker.current !== undefined && latLng !== null) {\r\n            marker.current.setLngLat(latLng);\r\n            marker.current.addTo(mapboxMap!);\r\n        }\r\n    }\r\n\r\n    const getFeatureFromCoordinates = (latLng: mapboxgl.LngLat | null) : Promise<MapboxGeocoder.Result> => {\r\n        return geocodingClient.reverseGeocode({\r\n            query: [latLng?.lng, latLng?.lat]\r\n          })\r\n            .send()\r\n            .then((response: any) => {\r\n                // GeoJSON document with geocoding matches\r\n                if (response.body.features[0]) {\r\n                    return response.body.features[0];\r\n                } else {\r\n                    return null;\r\n                }\r\n            });\r\n    }\r\n\r\n    const getPlaceName = (feature: MapboxGeocoder.Result, latLng: mapboxgl.LngLat) => {\r\n        if (feature != undefined) {\r\n            return feature.place_name;\r\n        }\r\n        return String(latLng?.lng + ', ' + latLng?.lat);\r\n    }\r\n\r\n    const setMarkers = async (lngLat: mapboxgl.LngLat) => {\r\n        if (startRef.current !== null && markerSelector === 'startLocation') {\r\n            const feature = await getFeatureFromCoordinates(lngLat);\r\n            startRef.current.value = getPlaceName(feature, lngLat);\r\n            setStartLngLat(lngLat);\r\n            placeMarker(lngLat, startMarker);\r\n\r\n            // startMarker?.setLngLat(e.lngLat);\r\n        } else if (endRef.current !== null && markerSelector === 'endLocation') {\r\n            const feature = await getFeatureFromCoordinates(lngLat);\r\n            endRef.current.value = getPlaceName(feature, lngLat);\r\n            setEndLngLat(lngLat);\r\n            placeMarker(lngLat, endMarker);\r\n        }\r\n        setMarkerSelector('');\r\n    }\r\n    \r\n    const mapClick = async (e: mapboxgl.MapLayerMouseEvent) => {\r\n        if (markerSelector !== '') {\r\n            await setMarkers(e.lngLat);\r\n        } else if (e.features != undefined) {\r\n            console.log(e.features)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"bg-gray-400 flex h-screen justify-center\">\r\n            <div className=\"w-full h-full z-0\">\r\n\r\n                <Map\r\n                    initialViewState={{\r\n                        bounds: [lowerLng, lowerLat, upperLng, upperLat],\r\n                        zoom: 14\r\n                    }}\r\n                    mapboxAccessToken={apiKey[0]}\r\n                    renderWorldCopies={false}\r\n                    boxZoom={false}\r\n                    // minZoom={8}\r\n                    logoPosition={'bottom-left'}\r\n                    attributionControl={false}\r\n                    pitchWithRotate={false}\r\n                    dragRotate={true}\r\n                    touchPitch={false}\r\n                    onClick={mapClick}\r\n                    ref={mapboxMapRef}\r\n                    reuseMaps={true}\r\n\r\n                    style={{display: \"flex absolute\"}}\r\n                    mapStyle=\"mapbox://styles/mapbox/dark-v10\"\r\n                >\r\n                    {/* TODO: reorder source elements to show active one on top always */}\r\n                    <Source id='driving-traffic' type=\"geojson\" tolerance={1} buffer={0} lineMetrics={true} data={availableRoutes['driving-traffic']}>\r\n                        <Layer {...(activeTravelType === 'driving-traffic' ? layerMap['driving-traffic'].activeLayer : layerMap['driving-traffic'].inactiveLayer)}/>\r\n                    </Source>\r\n                    <Source id='cycling' type=\"geojson\" tolerance={1} buffer={0} lineMetrics={true} data={availableRoutes['cycling']}>\r\n                        <Layer {...(activeTravelType === 'cycling' ? layerMap['cycling'].activeLayer : layerMap['cycling'].inactiveLayer)}/>\r\n                    </Source>\r\n                    <Source id='walking' type=\"geojson\" tolerance={1} buffer={0} lineMetrics={true} data={availableRoutes['walking']}>\r\n                        <Layer {...(activeTravelType === 'walking' ? layerMap['walking'].activeLayer : layerMap['walking'].inactiveLayer)}/>\r\n                    </Source>\r\n                    <Source id='public-transport' type=\"geojson\" tolerance={1} buffer={0} lineMetrics={true} data={availableRoutes['public-transport']}>\r\n                        <Layer {...(activeTravelType === 'public-transport' ? layerMap['public-transport'].activeLayer : layerMap['public-transport'].inactiveLayer)}/>\r\n                    </Source>\r\n                </Map>\r\n            </div>\r\n            <Transition\r\n                appear={true}\r\n                as={Fragment}\r\n                show={isShowingTopMenu}\r\n                enter=\"transform duration-200 transition ease-in-out\"\r\n                enterFrom=\"opacity-0 scale-95\"\r\n                enterTo=\"opacity-100 rotate-0 scale-100\"\r\n                leave=\"transform duration-200 transition ease-in-out\"\r\n                leaveFrom=\"opacity-100 rotate-0 scale-100 \"\r\n                leaveTo=\"opacity-0 scale-95 \"\r\n            >\r\n                <Form className=\"z-1 flex-grow w-screen flex-col absolute px-2 shadow-lg text-xl bg-gray-200 sm:w-auto sm:py-1 sm:px-3 sm:rounded-b-3xl sm:left-1 md:flex-row md:left-5 lg:left-1/4 xl:left-auto\">\r\n                    <div className=\"border-separate mb-1 sm:px-4 sm:flex sm:items-start sm:justify-between sm:space-x-1 md:mb-2\">\r\n                        <div className=\"md:mr-4\">\r\n                            <label className=\"flex flex-row text-gray-700 text-sm font-bold sm:mb-0.5\" htmlFor=\"origin\">\r\n                                Origin\r\n                                <Switch\r\n                                    checked={markerSelector === 'startLocation'}\r\n                                    onChange={() => markerSelector === 'startLocation' ? setMarkerSelector('') : setMarkerSelector('startLocation')} // toggle\r\n                                    className='ml-auto mr-2'\r\n                                >\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className={`${markerSelector === 'startLocation' ? 'outline-double fill-slate-500' : ''} h-5 w-5 outline-1 outline-black hover:outline-double hover:fill-slate-500`} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                                    </svg>\r\n                                </Switch>\r\n                                \r\n                            </label>\r\n                                <input autoComplete=\"street-address\" \r\n                                    className=\"shadow appearance-none border rounded w-full py-1 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \r\n                                    id=\"Start Point\" \r\n                                    type=\"text\" \r\n                                    placeholder=\"Enter start point\" \r\n                                    ref={startRef}\r\n                                />\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <label className=\"flex flex-row text-gray-700 text-sm font-bold sm:mb-0.5\" htmlFor=\"destination\">\r\n                                Destination\r\n                                <Switch\r\n                                    checked={markerSelector === 'endLocation'}\r\n                                    onChange={() => markerSelector === 'endLocation' ? setMarkerSelector('') : setMarkerSelector('endLocation')} // toggle \r\n                                    className='ml-auto mr-2'\r\n                                >\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className={`${markerSelector == 'endLocation' ? 'outline-double fill-slate-500' : ''} h-5 w-5 outline-1 outline-black hover:outline-double hover:fill-slate-500`} fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" stroke-width=\"2\">\r\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n                                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                                    </svg>\r\n                                </Switch>\r\n                            </label>\r\n                                <input className=\"shadow appearance-none border rounded w-full py-1 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\" \r\n                                    id=\"End Point\" \r\n                                    type=\"text\" \r\n                                    placeholder=\"Enter end point\" \r\n                                    ref={endRef}\r\n                                />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between sm:flex-row\">\r\n                        <button className=\"bg-green-600 hover:bg-green-700 text-white font-medium py-1 px-2 mb-2 ml-auto sm:mr-4 rounded focus:outline-none focus:shadow-outline\" \r\n                            type=\"button\" \r\n                            onClick={calculateRoute}>\r\n                            Calculate\r\n                        </button>\r\n                    </div>\r\n                </Form>\r\n            </Transition>\r\n            <div>\r\n                <div id=\"desktop-sidebar\" className=\"absolute z-10 right-1 top-28 hidden sm:block w-auto px-2 sm:px-0\">\r\n                    <StatsWindow sidebarData={sidebarData} activeTravelType={activeTravelType} setActiveTravelType={setActiveTravelType}/> \r\n                </div>\r\n\r\n                {/* <div id=\"mobile-sidebar\" className=\"md:hidden w-auto max-w-md px-2 py-16 sm:px-0\">\r\n                    <StatsWindow sidebarData={sidebarData}/> \r\n                </div> */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n", "import { StatsData } from \"~/types/StatsData\";\r\n\r\nfunction classNames(...classes: string[]) {\r\n    return classes.filter(Boolean).join(' ')\r\n}\r\n\r\ntype StatsWindowProps = {\r\n    sidebarData: StatsData[],\r\n    activeTravelType: string,\r\n    setActiveTravelType: React.Dispatch<React.SetStateAction<string>>,\r\n}\r\n\r\n\r\n\r\nexport default function StatsWindow(props: StatsWindowProps) {\r\n    const categories = [\r\n        {\r\n            id: 'Fastest',\r\n            comparator: 'durationSeconds',\r\n        },\r\n        {\r\n            id: 'Least Carbon Footprint',\r\n            comparator: 'carbonGrams'\r\n        }\r\n    ];\r\n\r\n    const parseDistance = (distanceMeters: number | undefined, rank: (number | undefined)) => {\r\n        if (distanceMeters == undefined || distanceMeters == 0) {\r\n            return getColors('- km', undefined);\r\n        } else if (distanceMeters < 1000) {\r\n            return getColors(distanceMeters.toFixed(0) + ' m', rank);\r\n        } else {\r\n            return getColors((distanceMeters / 1000).toFixed(1) + ' km', rank);\r\n        }\r\n    }\r\n\r\n    const parseDuration = (durationSeconds: number | undefined, rank: (number | undefined)) => {\r\n        if (durationSeconds == undefined || durationSeconds == 0) {\r\n            return getColors('- min', undefined);\r\n        } else if (durationSeconds <= 60) {\r\n            return getColors(1 + ' min', rank);\r\n        } else if (durationSeconds < 3600) {\r\n            return getColors((durationSeconds / 60).toFixed(0) + ' min', rank);\r\n        } else {\r\n            return getColors((durationSeconds / 3600).toFixed(0) + ' h ' + ((durationSeconds % 3600) / 60).toFixed(0) + ' min', rank);\r\n        }\r\n    }\r\n\r\n    const parseCarbon = (carbonGrams: number | undefined, rank: (number | undefined)) => {\r\n        if (carbonGrams == undefined || carbonGrams == 0) {\r\n            return getColors(\"- kg\", undefined); \r\n        } else if (carbonGrams < 10) {\r\n            return getColors(\"Negligible\", rank);\r\n        } else {\r\n            return getColors((carbonGrams / 1000).toPrecision(3) + ' kg', rank);\r\n        }\r\n    }\r\n\r\n    const getColors = (text: string, rank: (number | undefined)) => {\r\n        switch (rank) {\r\n            case 0:\r\n                return <span className=\"text-green-500\">{text}</span>;\r\n            case 1:\r\n                return <span className=\"text-yellow-500\">{text}</span>;\r\n            case 2:\r\n                return <span className=\"text-orange-500\">{text}</span>;\r\n            case 3:\r\n                return <span className=\"text-red-500\">{text}</span>;\r\n            default:\r\n                return <span className=\"text-gray-400\">{text}</span>;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classNames(\r\n            'rounded-xl bg-gray-200 p-4',\r\n            'ring-white ring-opacity-60 ring-offset-2 ring-offset-blue-400 focus:outline-none focus:ring-2'\r\n        )}>\r\n                <table className=\"table-fixed mt-1 space-x-1 text-base lg:text-lg xl:text-xl font-normal leading-4 text-gray-500 text-center\">\r\n                    <thead className=\"text-sm md:text-md lg:text-lg xl:text-xl font-medium leading-5 text-black font-['Alata']\">\r\n                        <tr>\r\n                            <th className=\"pl-1 pr-2 whitespace-nowrap\">Transit Type</th>\r\n                            <th className=\"px-3 md:px-4 xl:px-5\">Distance</th>\r\n                            <th className=\"px-3 md:px-4 xl:px-5\">Duration</th>\r\n                            <th className=\"px-6 md:px-7 xl:px-8\">CO<sub>2</sub></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.sidebarData.sort((a, b) => { \r\n                                return 0; // TODO: add sorting by clicking on the titles\r\n                            }).map((transport) => (\r\n                                <tr\r\n                                    key={transport.id}\r\n                                    className={classNames(\r\n                                        `${props.activeTravelType === transport.type ? 'outline ring-blue-400 ring-2 z-10' : ''}`,\r\n                                        \"relative rounded-md py-4 hover:bg-gray-100 mt-1 space-x-1 font-normal leading-4 text-gray-500 pl-2 pr-3 font-['Maven_Pro']\"\r\n                                    )}\r\n                                    onClick={() => props.setActiveTravelType(transport.type)}\r\n                                >\r\n                                    <td className=\"text-xs md:text-sm lg:text-base xl:text-lg font-medium leading-5 flex text-black items-center font-sans\">\r\n                                        <img src={\"/images/\" + transport.type + \".png\"} className=\"max-h-5 max-w-5\"  onError={(event) => (event.target as HTMLInputElement).style.display = 'none'}></img> \r\n                                        {transport.title}\r\n                                    </td>\r\n                                \r\n                                    <td>{parseDistance(transport.distanceMeters, transport.distanceRank)}</td>\r\n\r\n                                    <td>{parseDuration(transport.durationSeconds, transport.durationRank)}</td>\r\n\r\n                                    <td>{parseCarbon(transport.carbonGrams, transport.carbonRank)}</td>\r\n\r\n                                    <td>\r\n                                    <a\r\n                                    href=\"#\"\r\n                                    className={classNames(\r\n                                        'absolute inset-0 rounded-md',\r\n                                        'ring-blue-400 focus:z-10 focus:outline-none focus:ring-2'\r\n                                    )}\r\n                                    />\r\n                                    </td>\r\n                                </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n        </div>\r\n    )\r\n}", "import mapboxgl from \"mapbox-gl\";\r\nimport { greatCircle, lineDistance, midpoint, destination, bearing , distance, lineArc } from \"@turf/turf\"\r\nimport { toWgs84, toMercator } from \"@turf/projection\"\r\n\r\nexport default function CurvedPolyline(origin: mapboxgl.LngLat | undefined, dest: mapboxgl.LngLat | undefined): GeoJSON.Feature {\r\n    if (origin == undefined || dest == undefined) {\r\n        console.log(origin)\r\n        console.log(dest)\r\n        return {\r\n            type: \"Feature\",\r\n            geometry: {\r\n                type: 'LineString',\r\n                coordinates: [],\r\n            },\r\n            properties: null\r\n        }\r\n    }\r\n\r\n    // console.log(coordinates);\r\n    const test = greatCircle([origin.lng, origin.lat], [dest.lng, dest.lat], {npoints: 100, offset: 100});\r\n\r\n    let route: GeoJSON.LineString = {\r\n        type: 'LineString',\r\n        coordinates: [\r\n            [origin.lng, origin.lat],\r\n            [dest.lng, dest.lat]\r\n        ]\r\n    };\r\n\r\n    route = toWgs84(route);\r\n    const lineDist = lineDistance(route, {units: 'kilometers'});\r\n    const midPoint = midpoint(route.coordinates[0], route.coordinates[1]);\r\n    const center = destination(\r\n        midPoint,\r\n        lineDist,\r\n        bearing(route.coordinates[0], route.coordinates[1]) + 90\r\n    );\r\n\r\n    const linearc = lineArc(\r\n        center,\r\n        distance(center, route.coordinates[0]),\r\n        bearing(center, route.coordinates[0]),\r\n        bearing(center, route.coordinates[1]),\r\n        {steps: 500}\r\n    );\r\n\r\n    const data: GeoJSON.Feature = toMercator(linearc);\r\n\r\n    return data;\r\n}", "export const cyclingActive: mapboxgl.LineLayer = {\r\n  id: 'cycling',\r\n  type: 'line',\r\n  layout: {\r\n    'line-cap': 'round',\r\n  },\r\n  paint: {\r\n    'line-color': '#d3db2e',\r\n    'line-gradient': [\r\n      'interpolate',\r\n      ['linear'],\r\n      ['line-progress'],\r\n      0,\r\n      '#d3db2e',\r\n      1,\r\n      '#cbd41c',\r\n    ],\r\n    'line-opacity': [\r\n      'case',\r\n      ['boolean', ['feature-state', 'hover'], false],\r\n      1,\r\n      ['boolean', ['feature-state', 'fadein'], false],\r\n      0.07,\r\n      0.9, // default\r\n    ],\r\n    'line-width': [\r\n      'interpolate',\r\n      ['linear'],\r\n      ['zoom'],\r\n      12,\r\n      5,\r\n      16,\r\n      13,\r\n      22,\r\n      25,\r\n    ],\r\n  },\r\n}\r\n\r\nexport const cyclingInactive: mapboxgl.LineLayer = {\r\n  id: 'cycling',\r\n  type: 'line',\r\n  layout: {\r\n    'line-cap': 'round',\r\n  },\r\n  paint: {\r\n    'line-color': '#a0a0a0',\r\n    'line-opacity': [\r\n      'case',\r\n      ['boolean', ['feature-state', 'hover'], false],\r\n      1,\r\n      ['boolean', ['feature-state', 'fadein'], false],\r\n      0.07,\r\n      0.5, // default\r\n    ],\r\n    'line-width': [\r\n      'interpolate',\r\n      ['linear'],\r\n      ['zoom'],\r\n      12,\r\n      5,\r\n      16,\r\n      13,\r\n      22,\r\n      25,\r\n    ],\r\n  },\r\n}", "export const drivingTrafficActive: mapboxgl.LineLayer = {\r\n  id: 'driving-traffic',\r\n  type: 'line',\r\n  layout: {\r\n    'line-cap': 'round',\r\n  },\r\n  paint: {\r\n    'line-color': '#2066ba',\r\n    'line-gradient': [\r\n      'interpolate',\r\n      ['linear'],\r\n      ['line-progress'],\r\n      0,\r\n      '#2066ba',\r\n      1,\r\n      '#2088d0',\r\n    ],\r\n    'line-opacity': [\r\n      'case',\r\n      ['boolean', ['feature-state', 'hover'], false],\r\n      1,\r\n      ['boolean', ['feature-state', 'fadein'], false],\r\n      0.07,\r\n      0.9, // default\r\n    ],\r\n    'line-width': [\r\n      'interpolate',\r\n      ['linear'],\r\n      ['zoom'],\r\n      12,\r\n      5,\r\n      16,\r\n      13,\r\n      22,\r\n      25,\r\n    ],\r\n  },\r\n}\r\n\r\nexport const drivingTrafficInactive: mapboxgl.LineLayer = {\r\n  id: 'driving-traffic',\r\n  type: 'line',\r\n  layout: {\r\n    'line-cap': 'round',\r\n  },\r\n  paint: {\r\n    'line-color': '#a0a0a0',\r\n    'line-opacity': [\r\n      'case',\r\n      ['boolean', ['feature-state', 'hover'], false],\r\n      1,\r\n      ['boolean', ['feature-state', 'fadein'], false],\r\n      0.07,\r\n      0.5, // default\r\n    ],\r\n    'line-width': [\r\n      'interpolate',\r\n      ['linear'],\r\n      ['zoom'],\r\n      12,\r\n      5,\r\n      16,\r\n      13,\r\n      22,\r\n      25,\r\n    ],\r\n  },\r\n}", "export const publicTransportActive: mapboxgl.LineLayer = {\r\n  id: 'public-transport',\r\n  type: 'line',\r\n  layout: {\r\n    'line-cap': 'round',\r\n  },\r\n  paint: {\r\n    'line-color': '#20ba44',\r\n    'line-dasharray': [2, 3],\r\n    // 'line-gradient': [\r\n    //   'interpolate',\r\n    //   ['linear'],\r\n    //   ['line-progress'],\r\n    //   0,\r\n    //   '#20ba44',\r\n    //   1,\r\n    //   '#972FFE',\r\n    // ],\r\n    'line-opacity': [\r\n      'case',\r\n      ['boolean', ['feature-state', 'hover'], false],\r\n      1,\r\n      ['boolean', ['feature-state', 'fadein'], false],\r\n      0.07,\r\n      0.9, // default\r\n    ],\r\n    'line-width': [\r\n      'interpolate',\r\n      ['linear'],\r\n      ['zoom'],\r\n      12,\r\n      5,\r\n      16,\r\n      13,\r\n      22,\r\n      25,\r\n    ],\r\n  },\r\n}\r\n\r\nexport const publicTransportInactive: mapboxgl.LineLayer = {\r\n  id: \"public-transport\",\r\n  type: 'line',\r\n  layout: {\r\n    'line-cap': 'round',\r\n  },\r\n  paint: {\r\n    'line-color': '#a0a0a0',\r\n    'line-dasharray': [2, 3],\r\n    'line-opacity': [\r\n      'case',\r\n      ['boolean', ['feature-state', 'hover'], false],\r\n      1,\r\n      ['boolean', ['feature-state', 'fadein'], false],\r\n      0.07,\r\n      0.5, // default\r\n    ],\r\n    'line-width': [\r\n      'interpolate',\r\n      ['linear'],\r\n      ['zoom'],\r\n      12,\r\n      5,\r\n      16,\r\n      13,\r\n      22,\r\n      25,\r\n    ],\r\n  },\r\n}", "export const walkingActive: mapboxgl.LineLayer = {\r\n  id: 'walking',\r\n  type: 'line',\r\n  layout: {\r\n    'line-cap': 'round',\r\n  },\r\n  paint: {\r\n    'line-dasharray': [0, 2],\r\n    'line-color': '#20ba44',\r\n    'line-gradient': [\r\n      'interpolate',\r\n      ['linear'],\r\n      ['line-progress'],\r\n      0,\r\n      '#20ba44',\r\n      1,\r\n      '#20dc44',\r\n    ],\r\n    'line-opacity': [\r\n      'case',\r\n      ['boolean', ['feature-state', 'hover'], false],\r\n      1,\r\n      ['boolean', ['feature-state', 'fadein'], false],\r\n      0.07,\r\n      0.9, // default\r\n    ],\r\n    'line-width': [\r\n      'interpolate',\r\n      ['linear'],\r\n      ['zoom'],\r\n      12,\r\n      5,\r\n      16,\r\n      13,\r\n      22,\r\n      25,\r\n    ],\r\n  },\r\n}\r\n\r\nexport const walkingInactive: mapboxgl.LineLayer = {\r\n  id: 'walking',\r\n  type: 'line',\r\n  layout: {\r\n    'line-cap': 'round',\r\n  },\r\n  paint: {\r\n    'line-color': '#a0a0a0',\r\n    'line-dasharray': [0, 2],\r\n    'line-opacity': [\r\n      'case',\r\n      ['boolean', ['feature-state', 'hover'], false],\r\n      1,\r\n      ['boolean', ['feature-state', 'fadein'], false],\r\n      0.07,\r\n      0.5, // default\r\n    ],\r\n    'line-width': [\r\n      'interpolate',\r\n      ['linear'],\r\n      ['zoom'],\r\n      12,\r\n      5,\r\n      16,\r\n      13,\r\n      22,\r\n      25,\r\n    ],\r\n  },\r\n}", "import { cyclingActive, cyclingInactive } from \"./cycling\";\r\nimport { drivingTrafficActive, drivingTrafficInactive } from \"./driving-traffic\";\r\nimport { publicTransportActive, publicTransportInactive } from \"./public-transport\";\r\nimport { walkingActive, walkingInactive } from \"./walking\";\r\n\r\nexport declare type LayerMap = {\r\n    [index: string]: {\r\n        activeLayer: mapboxgl.LineLayer,\r\n        inactiveLayer: mapboxgl.LineLayer,\r\n    }\r\n}\r\n\r\nexport const layerMap: LayerMap = {\r\n    'driving-traffic': {\r\n        activeLayer: drivingTrafficActive,\r\n        inactiveLayer: drivingTrafficInactive,\r\n    },\r\n    'cycling': {\r\n        activeLayer: cyclingActive,\r\n        inactiveLayer: cyclingInactive,\r\n    },\r\n    'walking': {\r\n        activeLayer: walkingActive,\r\n        inactiveLayer: walkingInactive,\r\n    },\r\n    'public-transport': {\r\n        activeLayer: publicTransportActive,\r\n        inactiveLayer: publicTransportInactive,\r\n    }\r\n};", "export default {'version':'98d8fc3f','entry':{'module':'/build/entry.client-L63XLYV6.js','imports':['/build/_shared/chunk-2HJOQVBF.js','/build/_shared/chunk-J4EE5LOM.js','/build/_shared/chunk-5SG4DK2S.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-54NWIOFX.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/healthcheck':{'id':'routes/healthcheck','parentId':'root','path':'healthcheck','index':undefined,'caseSensitive':undefined,'module':'/build/routes/healthcheck-CPDO2VR4.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-4KIOZH5L.js','imports':['/build/_shared/chunk-XE4ZAWSM.js'],'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/join':{'id':'routes/join','parentId':'root','path':'join','index':undefined,'caseSensitive':undefined,'module':'/build/routes/join-RY4VQIQQ.js','imports':['/build/_shared/chunk-27HH3RNS.js','/build/_shared/chunk-XE4ZAWSM.js','/build/_shared/chunk-3TNEPCUC.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/login':{'id':'routes/login','parentId':'root','path':'login','index':undefined,'caseSensitive':undefined,'module':'/build/routes/login-S5OQTAYI.js','imports':['/build/_shared/chunk-27HH3RNS.js','/build/_shared/chunk-XE4ZAWSM.js','/build/_shared/chunk-3TNEPCUC.js'],'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/logout':{'id':'routes/logout','parentId':'root','path':'logout','index':undefined,'caseSensitive':undefined,'module':'/build/routes/logout-JT62SE2N.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/maps':{'id':'routes/maps','parentId':'root','path':'maps','index':undefined,'caseSensitive':undefined,'module':'/build/routes/maps-EPR7NMFS.js','imports':['/build/_shared/chunk-DECPSMZZ.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes':{'id':'routes/notes','parentId':'root','path':'notes','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes-5NQMFPDX.js','imports':['/build/_shared/chunk-XE4ZAWSM.js','/build/_shared/chunk-VLTS5H2Q.js','/build/_shared/chunk-3TNEPCUC.js'],'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/$noteId':{'id':'routes/notes/$noteId','parentId':'routes/notes','path':':noteId','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes/$noteId-KZIEX3C7.js','imports':undefined,'hasAction':true,'hasLoader':true,'hasCatchBoundary':true,'hasErrorBoundary':true},'routes/notes/index':{'id':'routes/notes/index','parentId':'routes/notes','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/notes/index-U3Q572JV.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/notes/new':{'id':'routes/notes/new','parentId':'routes/notes','path':'new','index':undefined,'caseSensitive':undefined,'module':'/build/routes/notes/new-OXZEL2JV.js','imports':undefined,'hasAction':true,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-98D8FC3F.js'};", "\nimport * as entryServer from \"./entry.server.tsx\";\nimport * as route0 from \"./root.tsx\";\nimport * as route1 from \"./routes\\\\healthcheck.tsx\";\nimport * as route2 from \"./routes\\\\logout.tsx\";\nimport * as route3 from \"./routes\\\\index.tsx\";\nimport * as route4 from \"./routes\\\\login.tsx\";\nimport * as route5 from \"./routes\\\\notes.tsx\";\nimport * as route6 from \"./routes\\\\notes\\\\$noteId.tsx\";\nimport * as route7 from \"./routes\\\\notes\\\\index.tsx\";\nimport * as route8 from \"./routes\\\\notes\\\\new.tsx\";\nimport * as route9 from \"./routes\\\\join.tsx\";\nimport * as route10 from \"./routes\\\\maps.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const assetsBuildDirectory = \"public\\\\build\";\n  export const publicPath = \"/build/\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/healthcheck\": {\n      id: \"routes/healthcheck\",\n      parentId: \"root\",\n      path: \"healthcheck\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route1\n    },\n  \"routes/logout\": {\n      id: \"routes/logout\",\n      parentId: \"root\",\n      path: \"logout\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route2\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route3\n    },\n  \"routes/login\": {\n      id: \"routes/login\",\n      parentId: \"root\",\n      path: \"login\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route4\n    },\n  \"routes/notes\": {\n      id: \"routes/notes\",\n      parentId: \"root\",\n      path: \"notes\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route5\n    },\n  \"routes/notes/$noteId\": {\n      id: \"routes/notes/$noteId\",\n      parentId: \"routes/notes\",\n      path: \":noteId\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route6\n    },\n  \"routes/notes/index\": {\n      id: \"routes/notes/index\",\n      parentId: \"routes/notes\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route7\n    },\n  \"routes/notes/new\": {\n      id: \"routes/notes/new\",\n      parentId: \"routes/notes\",\n      path: \"new\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route8\n    },\n  \"routes/join\": {\n      id: \"routes/join\",\n      parentId: \"root\",\n      path: \"join\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route9\n    },\n  \"routes/maps\": {\n      id: \"routes/maps\",\n      parentId: \"root\",\n      path: \"maps\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route10\n    }\n  };"],
  "mappings": "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",
  "names": []
}
